qplot(hwy, data = mpg, facets = drv ~ . ., bindwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., bindwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg. geom = c("point", "smooth"), facets = .~drv, method = "loess")
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
g<-ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement!", y = "Hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(size = 2, alpha = 1/2, aes(color = drv))+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y = myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")+labs(x="Displacement", y = "Highway Mileage", title = "Swirl Rules!")
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = .4, col = "red")
5
abline(h = .05, col = "red")
abline(h = .05)
abline(h = .08)
12
abline(h = .05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,ch = 19,cex=2, col = cols1[newClust])
points(x,y,pch = 19,cex=2, col = cols1[newClust])
tapply(x,newCLust, mean)
tapply(x,newClust, mean)
tapply(y,newClust, mean)
points(newCx,newCy, col=cols1, pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch = 19,cex=2, col = cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col = cols1, pch = 9, cex =2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatri)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
scale(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPath.R")
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
diag%*%matu%*%t(matv)
matu %*% diag %*% t(matv)
здфн()
play()
scale(mat)
mat
nxt()
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantatrix)
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd$d
svd2$d
dim(faceData)
a1<-svd1$u%*%t(svd1$v)*svd1$d[1]
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2<-svd1$u[,1:2]%*%t(svd1$v[,1:2])*diag(svd1$d[1:2])
a2<-(svd1$u[,1:2]%*%t(svd1$v[,1:2]))*diag(svd1$d[1:2])
a2<-svd1$u[,1:2]%*%t(svd1$v[,1:2])%*%diag(svd1$d[1:2])
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10])%*%t(svd1$v[,1:10]))
dim(ssd)
names(c(562, 563))
names(ssd[c(562, 563)])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd, subject == 1)
dim(sub1)
names(ssd[1:12])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclust(mdist)
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<hclust(mdist)
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1u)
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclusterinf, lac.col = unclass(sub1$sctivity))
myplclust(hclustering, lac.col = unclass(sub1$sctivity))
mypclust(hclustering, lab.col = unclass(sib1$activity))
myplclust(hclustering, lab.col = unclass(sib1$activity))
q
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
play()
dim(sub1)
kClust<-kmeans(sub1[,-c(562, 563)])
nxt()
kClust<-kmeans(sub1[,-c(562, 563)])
kClust<-kmeans(sub1[,-c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust<-kmeans(sub1[,-c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying<-which(kCLust$size==29)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
play()
str(kClust)
kClust$centers
kCLust$size
kClust$size
nxt()
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames, '|', fixed = TURE)
cnames<-strsplit(cnames, '|', fixed = TRUE)
cnames
play()
?strsplit
nxt()
make.names(cnames[[1]][wcol])
names(pm0<-make.names(cnames[[1]][wcol])
q
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
play()
?mean
nxt()
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na)x1
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative<- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
play()
str(negative)
nxt(
)
dates<-pmt$Date
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<_subset(pm0,State.Code==36 & county.site %in% both)
cnt0<-subset(pm0,State.Code==36 & county.site %in% both)
cnt1<-subset(pm1,State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site),nrow)
play()
table(cnt0, cnt0$county.site))
table(cnt0, cnt0$county.site)
table(cnt0$county.site)
nxt(
)
sapply(split(cnt1, cnt1$county.site),nrow)
pm0sub<-subset(cnt0, County.Code= 63 & Site.ID == 2008)
pm0sub<-subset(cnt0, County.Code==63 & Site.ID == 2008)
pm1sub<-subset(cnt1, County.Code==63 & Site.ID == 2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date, "%Y%m%d")
)
dates0<-as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0,x0sub,pch = 20)
abline(h=median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1,x1sub,pch = 20)
abline(h=median(x1sub, na.rm = TRUE), lwd = 2)
rng<-range(x0sub, x1sub, na.rm = TRUE)
str(rng)
print(rng)
play()
mean(table(pm0$State))
table(pm0$State)
sapply(pm0$State, mean(pm0$State.Value))
sapply(pm0$State, mean(pm0$State.value))
sapply(pm0$State, mean(pm0$Sample.value))
str(pm0)
sapply(pm0$State.Code, mean(pm0$Sample.value))
sapply(pm0, table(pm0$State), mean(pm0$Sample.value))
sapply(pm0, table(pm0$State.COde), mean(pm0$Sample.value))
sapply(pm0, table(pm0$State.Code), mean(pm0$Sample.value))
nxt(
)
mn0<-with(pm0, tapply(Sample.Value,State.Code, mean, na.rm=TRUE))
str(mn0)
mn1<-with(pm1, tapply(Sample.Value,State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state = names(mn0), mean = mn0)
d1<-data.frame(state = names(mn1), mean = mn1)
mrg<-merge(d0,d1,by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3]
)
mrg[mrg$mean.x< mrg$mean.y, ]
<-names = c("Date", rep(1:35))
a <-names = c("Date", rep(1:35))
a <-c("Date", rep(1:35))
Results<-data.frame(names = c("Date", rep(1:35)))
Results[1,2]<-0,9
Results[1,25]<-1
Results[1,26]<-1
Results<-data.frame(names = c("Date", rep(1:35)))
Results[1,2]<-0.9
Results[1,25]<-1
Results[1,26]<-1
View(Results)
Results<-data.frame(row.names = c("Date", rep(1:35)))
View(results)
View(Results)
Results<-data.frame(x = rep(NA, 36), y = rep(NA, 10), row.names = c("Date", rep(1:35)))
Results<-data.frame(x = rep(NA, 36), row.names = c("Date", rep(1:35)))
VIew(Results)
View(Results)
Results<-data.frame("Date" = NA, rep(1:35) = NA)
Results<-data.frame("Date" == NA, rep(1:35) == NA)
Results
names<-c("Date", rep(1:35))
Results<-data.frame(names = names)
View(Results)
Results<-data.frame("Date" = c("15/11/2-15", "22/11/2015"), "1" = NA, "2" = NA, "3" = NA, "4" = NA, "5" = NA, "6" = NA, "7" = NA, "8" = NA, "9" = NA, "10"= NA, "11" = NA, "12" = NA, "13" = NA, "14" = NA, "15" = NA, "16" = NA, "17" = NA, "18" = NA, "19" = NA, "20" = NA, "21" = NA, "22" = NA,  "23" = NA, "24" = NA,  "25" = NA, "26" = NA, "27" = NA, "28" = NA, "29" = NA, "30" = NA, "31" = NA, "32" = NA, "33" = NA, "34" = NA, "35" = NA)
View(Results)
names(Resuls)
names(Results)
Results<-data.frame("Date" = c("15/11/2-15", "22/11/2015"), rep("1", 35))
Results<-data.frame("Date" = c("15/11/2-15", "22/11/2015"), rep(NA, 35))
Results<-data.frame("Date" = c("15/11/2-15", "22/11/2015"), rep(1:35))
Results<-data.frame("Date" = c("15/11/2-15"), rep(1:35))
VIew(Results)
View(Results)
Results<-data.frame("Date" = c("15/11/2015", "22/11/2015"), "1" = NA, "2" = NA, "3" = NA, "4" = NA, "5" = NA, "6" = NA, "7" = NA, "8" = NA, "9" = NA, "10"= NA, "11" = NA, "12" = NA, "13" = NA, "14" = NA, "15" = NA, "16" = NA, "17" = NA, "18" = NA, "19" = NA, "20" = NA, "21" = NA, "22" = NA,  "23" = NA, "24" = NA,  "25" = NA, "26" = NA, "27" = NA, "28" = NA, "29" = NA, "30" = NA, "31" = NA, "32" = NA, "33" = NA, "34" = NA, "35" = NA)
names(Results) <_c("Date", rep(1:35))
names(Results) <-c("Date", rep(1:35))
View(Results)
str(Results)
Results[1,2]<-0.9
> Results[1,25]<-1
Results[1,2]<-0.9
Results[1,25]<-1
Results[1,26]<-1
View(Results)
barplot(Results)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r echo=TRUE}
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "Date", "factor"))
data$date<-format(data$date, "%Y-%m-%d", usetz = FALSE)
```
## What is mean total number of steps taken per day?
Here's a histogram, representing the total number of steps taken per day.
``` {r echo = TRUE}
ag<-aggregate(steps ~ date, data = data, sum)
library(ggplot2)
qplot(steps, data = ag)
mean_steps<-mean(ag$steps)
median_steps<-median(ag$steps)
```
The mean of the total number of steps taken per day is `r mean_steps`. The median of the total number of steps taken per day is `r median_steps`.
## What is the average daily activity pattern?
``` {r echo = TRUE}
daily_pat<-aggregate(steps ~ interval, data = data, mean)
library(ggplot2)
g<-ggplot(daily_pat, aes(interval, steps))
g + geom_point(type = "l")
max_steps<-max(daily_pat$steps)
max_r<-which(daily_pat$steps == max_steps)
max_int<-daily_pat[max_r,1]
```
The `r max_int` 5-min interval on average across all the days in the dataset contains the maximum number of steps!
## Imputing missing values
```{r echo = TRUE}
z<-na.omit(data)
nNA<-nrow(data) - nrow(z)
sum(is.na(data$steps))
sum(is.na(data$interval))
sum(is.na(data$date))
```
The total number of observations with missing values in the dataset is `r nNA`.
We can see that only steps column has NAs
I will substitute them with mean data for every interval.
``` {r echo = TRUE}
NAs<-which(is.na(data$steps) == TRUE)
data_new<-data
for (i in 1:2304) {
n<-NAs[i]
data_new[n, 1] <- daily_pat[which(daily_pat$int == data_new[n, 3]),2]
}
ag_new<-aggregate(steps ~ date, data = data_new, sum)
library(ggplot2)
qplot(steps, data = ag_new)
mean_steps_n<-mean(ag_new$steps)
median_steps_n<-median(ag_new$steps)
```
The mean of the total number of steps taken per day is `r mean_steps_n`. The median of the total number of steps taken per day is `r median_steps_n`. Imputing the NAs have caused the median steps data to become noninteger. The total number of everyday steps have of course incresased!
## Are there differences in activity patterns between weekdays and weekends?
```{r echo = TRUE}
w<-weekdays(data_new$date)
data_new$day<-rep(NA)
for (i in 1:nrow(data_new)) {
if (w[i] == "Saturday")
{
data_new[i,5] <- c("weekend")
}
else if (w[i] == "Sunday")
{
data_new[i,5] <- c("weekend")
}
else {
data_new[i,5] <- c("weekday")
}
}
daily_pat_n<-aggregate(steps ~ interval + day, data = data_new, mean)
library(ggplot2)
g<-ggplot(daily_pat_n, aes(interval, steps))
g + geom_point(type = "l") + facet_wrap(~ day, nrow = 2, ncol = 1)
```
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "Date", "factor"))
data$date<-format(data$date, "%Y-%m-%d", usetz = FALSE)
ag<-aggregate(steps ~ date, data = data, sum)
library(ggplot2)
qplot(steps, data = ag)
mean_steps<-mean(ag$steps)
median_steps<-median(ag$steps)
daily_pat<-aggregate(steps ~ interval, data = data, mean)
library(ggplot2)
g<-ggplot(daily_pat, aes(interval, steps))
g + geom_point(type = "l")
max_steps<-max(daily_pat$steps)
max_r<-which(daily_pat$steps == max_steps)
max_int<-daily_pat[max_r,1]
q()
stop()
end()
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "Date", "factor"))
data$date<-format(data$date, "%Y-%m-%d", usetz = FALSE)
setwd("~/RepData_PeerAssessment1")
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "Date", "factor"))
data$date<-format(data$date, "%Y-%m-%d", usetz = FALSE)
ag<-aggregate(steps ~ date, data = data, sum)
library(ggplot2)
qplot(steps, data = ag)
mean_steps<-mean(ag$steps)
median_steps<-median(ag$steps)
daily_pat<-aggregate(steps ~ interval, data = data, mean)
library(ggplot2)
g<-ggplot(daily_pat, aes(interval, steps))
g + geom_point(type = "l")
max_steps<-max(daily_pat$steps)
max_r<-which(daily_pat$steps == max_steps)
max_int<-daily_pat[max_r,1]
z<-na.omit(data)
nNA<-nrow(data) - nrow(z)
sum(is.na(data$steps))
sum(is.na(data$interval))
sum(is.na(data$date))
NAs<-which(is.na(data$steps) == TRUE)
data_new<-data
for (i in 1:2304) {
n<-NAs[i]
data_new[n, 1] <- daily_pat[which(daily_pat$int == data_new[n, 3]),2]
}
ag_new<-aggregate(steps ~ date, data = data_new, sum)
library(ggplot2)
qplot(steps, data = ag_new)
mean_steps_n<-mean(ag_new$steps)
median_steps_n<-median(ag_new$steps)
w<-weekdays(data_new$date)
data_new$day<-rep(NA)
for (i in 1:nrow(data_new)) {
if (w[i] == "Saturday")
{
data_new[i,5] <- c("weekend")
}
else if (w[i] == "Sunday")
{
data_new[i,5] <- c("weekend")
}
else {
data_new[i,5] <- c("weekday")
}
}
daily_pat_n<-aggregate(steps ~ interval + day, data = data_new, mean)
library(ggplot2)
g<-ggplot(daily_pat_n, aes(interval, steps))
g + geom_point(type = "l") + facet_wrap(~ day, nrow = 2, ncol = 1)
str(data_new)
View(data)
str(data)
data$date<-format(data$date, "%Y-%m-%d", usetz = FALSE)
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "Date", "factor"))
data$date<-format(data$date, format = "%Y-%m-%d", usetz = FALSE)
str(data)
data<-read.csv(unzip, colClasses = c("integer", "POSIXlt", "factor"))
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "character", "factor"))
data$date<-format(data$date, format = "%Y-%m-%d", usetz = FALSE)
str(data)
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "Date", "factor"))
data$date<-format(data$date, format = "%Y-%m-%d", usetz = FALSE)
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "character", "factor"))
data$date<-format(data$date, format = "%Y-%m-%d", usetz = FALSE)
unzip<-unzip("activity.zip",unzip="internal")
data<-read.csv(unzip, colClasses = c("integer", "character", "factor"))
data$date<-format(data$date, format = "%Y-%m-%d", usetz = FALSE)
str(data)
data$date_1<-format(data$date, format = "%Y-%m-%d", usetz = FALSE)
View(data)
str(data)
